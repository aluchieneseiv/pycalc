?start: command
    | expr

?expr: oop_1
    | ref "=" expr      -> set_var
    | expr "==" expr    -> equals
    | expr "~=" expr    -> differs

?oop_1: oop_2
    | "-" oop_2         -> neg
    | "+" oop_2         -> pos
    | oop_1 "+" oop_2   -> add
    | oop_1 "-" oop_2   -> sub

?oop_2: oop_3
    | oop_2 "*" oop_3   -> mul
    | oop_2 "/" oop_3   -> div
    | oop_2 ".*" oop_3  -> emul
    | oop_2 "./" oop_3  -> ediv
    | oop_2 "\\" oop_3  -> solve

?oop_3: value "^" oop_3 -> pow
    | value ".^" oop_3  -> epow
    | value

?value: "(" expr ")"
    | function_call
    | constant
    | ref               -> get_var

?variable: NAME

?ref: variable                              -> var_ref
    | variable "[" expr ["," expr] "]"      -> matrix_ref

?constant: scalar
    | array
    | matrix

?scalar: /[+-]?\d+\.?\d*([eE][-+]?\d+)?/            -> decimal
    | /[+-]?\d*\.?\d+([eE][-+]?\d+)?/               -> decimal

?matrix: "[" matrix_row (";" matrix_row)+ "]"       -> form_matrix

?matrix_row: scalar (","? scalar)*                  -> matrix_row

?array: "[" matrix_row "]"                          -> form_array

?function_ordered_args: expr? ("," expr)*           -> get_ordered_args

?function_call: ref "(" function_ordered_args ")"   -> evaluate

?command: "/clear" variable? ("," variable)*        -> clear_vars
    | "/vars"                                       -> show_vars

%import common.CNAME -> NAME
%import common.WS_INLINE
%ignore WS_INLINE

COMMENT: "#" /[^\n]/*
%ignore COMMENT