?start: command
    | expr

?expr: oop_bool
    | oop_bool "?" oop_add ":" oop_add -> where

?oop_bool : oop_cond
    | oop_bool "&&" oop_cond      -> logical_and
    | oop_bool "||" oop_cond      -> logical_or
    | "!" oop_cond                -> logical_not

?oop_cond: oop_add
    | ref "=" oop_add             -> set_var
    | oop_add "==" oop_add        -> equals
    | oop_add "!=" oop_add        -> differs
    | oop_add "<" oop_add         -> less
    | oop_add "<=" oop_add        -> less_equal
    | oop_add ">" oop_add         -> greater
    | oop_add ">=" oop_add        -> greater_equal

?oop_add: oop_mul
    | "-" oop_mul               -> negative
    | "|" oop_mul "|"           -> abs
    | oop_add "+" oop_mul       -> add
    | oop_add "-" oop_mul       -> subtract

?oop_mul: oop_exp
    | oop_mul "*" oop_exp       -> dot
    | oop_mul "/" oop_exp       -> divide
    | oop_mul ".*" oop_exp      -> multiply
    | oop_mul "./" oop_exp      -> divide
    | oop_mul "\\" oop_exp      -> solve
    | oop_mul "%" oop_exp       -> mod

?oop_exp: value "^" oop_exp     -> pow
    | value ".^" oop_exp        -> power
    | value

?value: "(" expr ")"
    | function_call
    | constant
    | ref                   -> get_var

?variable: NAME

?ref: variable                              -> var_ref
    | variable "[" expr ("," expr)* "]"     -> index_ref

?constant: scalar
    | array
    | matrix

?scalar: /\d+\.?\d*([eE][-+]?\d+)?/             -> decimal
    | /\d*\.?\d+([eE][-+]?\d+)?/                -> decimal
    | /\d+\.?\d*([eE][-+]?\d+)?j/               -> decimalj
    | /\d*\.?\d+([eE][-+]?\d+)?j/               -> decimalj

?matrix: "[" matrix_row (";" matrix_row)+ "]"       -> form_matrix

?matrix_row: expr ("," expr)*                       -> matrix_row

?array: "[" matrix_row "]"                          -> form_array

?function_call: ref "(" expr? ("," expr)* ")"       -> evaluate

?command: "/clear" variable? ("," variable)*        -> clear_vars
    | "/vars"                                       -> show_vars

%import common.CNAME -> NAME
%import common.WS_INLINE
%ignore WS_INLINE

COMMENT: "#" /[^\n]/*
%ignore COMMENT